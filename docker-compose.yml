version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: accessmanager_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-accessmanager}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - accessmanager_network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: accessmanager_backend
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-accessmanager}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-super-secret-refresh-key}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "5000:5000"
    networks:
      - accessmanager_network
    depends_on:
      - postgres
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: accessmanager_frontend
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:5000/api}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - accessmanager_network
    depends_on:
      - backend
    restart: unless-stopped

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: accessmanager_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - accessmanager_network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  accessmanager_network:
    driver: bridge